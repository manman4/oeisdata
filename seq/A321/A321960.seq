%I A321960 #14 Sep 22 2025 16:01:30
%S A321960 1,0,1,0,1,1,0,2,2,1,0,5,6,3,1,0,15,22,12,4,1,0,52,92,57,20,5,1,0,203,
%T A321960 426,303,116,30,6,1,0,877,2146,1752,744,205,42,7,1,0,4140,11624,10845,
%U A321960 5140,1535,330,56,8,1,0,21147,67146,71139,37676,12300,2820,497,72,9,1
%N A321960 Array of sequences read by descending antidiagonals, A(n) the Jacobi square of the sequence n, n+1, n+2, ....
%C A321960 For definitions and comments see A321964.
%F A321960 T(n, k) = A(n)[k] where A(n) is the Jacobi square of the sequence s(j) = n + j, j >= 0.
%e A321960 First few rows of the array start:
%e A321960 [0] 1, 0,  0,   0,    0,     0,      0,       0,        0, ... A000007
%e A321960 [1] 1, 1,  2,   5,   15,    52,    203,     877,     4140, ... A000110
%e A321960 [2] 1, 2,  6,  22,   92,   426,   2146,   11624,    67146, ... A074664
%e A321960 [3] 1, 3, 12,  57,  303,  1752,  10845,   71139,   491064, ... A321959
%e A321960 [4] 1, 4, 20, 116,  744,  5140,  37676,  290224,  2334300, ...
%e A321960 [5] 1, 5, 30, 205, 1535, 12300, 103975,  918785,  8434740, ...
%e A321960 [6] 1, 6, 42, 330, 2820, 25662, 245358, 2443272, 25188870, ...
%e A321960 [7] 1, 7, 56, 497, 4767, 48496, 516761, 5719399, 65369136, ...
%e A321960 Seen as triangle:
%e A321960 [0] 1;
%e A321960 [1] 0,   1;
%e A321960 [2] 0,   1,    1;
%e A321960 [3] 0,   2,    2,    1;
%e A321960 [4] 0,   5,    6,    3,   1;
%e A321960 [5] 0,  15,   22,   12,   4,   1;
%e A321960 [6] 0,  52,   92,   57,  20,   5,  1;
%e A321960 [7] 0, 203,  426,  303, 116,  30,  6, 1;
%e A321960 [8] 0, 877, 2146, 1752, 744, 205, 42, 7, 1;
%p A321960 # The function JacobiSquare is defined in A321964.
%p A321960 s := n -> [seq(n+k, k = 0..9)]: Trow := n -> JacobiSquare(s(n)):
%p A321960 for n from 0 to 7 do lprint(Trow(n)) od;
%t A321960 nmax = 10;
%t A321960 JacobiCF[a_, b_, p_:2] := Module[{m, k}, m = 1; For[k = Length[a], k >= 1, k--, m = 1 - b[[k]]*x - a[[k]]*x^p/m]; 1/m];
%t A321960 JacobiSquare[a_, p_: 2] := Module[{cf, ser}, cf = JacobiCF[a, a, p]; ser = Series[cf, {x, 0, Length[a]}]; CoefficientList[ser, x]];
%t A321960 s[n_] := Table[n + k, {k, 0, nmax}];
%t A321960 row[n_] := row[n] = JacobiSquare[s[n]];
%t A321960 T[_, 0] = 1; T[0, _] = 0; T[n_, k_] := row[n][[k + 1]];
%t A321960 Table[T[n - k, k], {n, 0, nmax}, {k, n, 0, -1}] // Flatten (* _Jean-Fran√ßois Alcover_, Jul 13 2019, after _Peter Luschny_ in A321964 *)
%o A321960 (SageMath)
%o A321960 def JacobiCF(a, b, dim, p=2):
%o A321960     m = 1
%o A321960     for k in range(dim-1, -1, -1):
%o A321960         m = 1 - b(k)*x - a(k)*x^p/m
%o A321960     return 1/m
%o A321960 def JacobiGF(a, b, dim, p=2):
%o A321960     cf = JacobiCF(a, b, dim, p)
%o A321960     return cf.series(x, dim).list()
%o A321960 def JacobiSquare(a, dim, p=2):
%o A321960     cf = JacobiCF(a, a, dim, p)
%o A321960     return cf.series(x, dim).list()
%o A321960 def StieltjesGF(a, dim, p=2):
%o A321960     return JacobiGF(a, lambda n: 0, dim, p)
%o A321960 def Trow(n): return JacobiSquare(lambda k: n+k, 10)
%o A321960 for n in (0..4): print(Trow(n))
%Y A321960 Rows of array: A000007, A000110, A074664, A321959.
%Y A321960 Columns include: A002378, A033445. Row sums of triangle: A321958.
%Y A321960 Cf. A321964.
%K A321960 nonn,tabl
%O A321960 0,8
%A A321960 _Peter Luschny_, Dec 27 2018
