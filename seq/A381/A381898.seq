%I A381898 #43 Jun 02 2025 01:56:07
%S A381898 1,2,8,3,3,0,3,1,7,1,1,8,7,4,0,6,8,1,9,3,9,2,7,9,8,8,5,0,8,1,6,1,7,3,
%T A381898 9,2,0,7,7,4,1,3,2,4,0,1,8,8,3,0,2,5,4,6,1,6,0,5,9,1,0,8,2,3,0,8,4,4,
%U A381898 0,4,3,2,1,7,6,6,1,1,0,1,3,3,5,2,6,9,4,7,9,9,2,8,4,0,8,1,5,5,6,3,9,3,7,1,0,9,7,6,6,1,5,3,8,0,7,7,9,6,4,4
%N A381898 Decimal expansion of exp(Sum_{k>=2} log_2(k)/(k * 2^k)).
%C A381898 The geometric mean of the logarithmic distribution with parameter value 1/2 (A381900) approaches this constant. In general, for parameter value p, it approaches exp(PolyLog'(1,p)/log(1-p)).
%F A381898 Equals exp(-PolyLog'(1,1/2)/log(2)), where PolyLog'(x,y) represents the derivative of the polylogarithm w.r.t. x.
%F A381898 From _Jwalin Bhatt_, May 07 2025: (Start)
%F A381898 Equals exp(Sum_{k>=2} log_2(k)/(k*2^k)).
%F A381898 Equals (Product_{k>=2} k^(1/(k*2^k))) ^ (1/log(2)). (End)
%e A381898 1.2833031711874068193927988...
%t A381898 N[Exp [Sum[Log2[i]/(i*2^i), {i, 2, Infinity}]], 120]
%t A381898 N[Exp[-Derivative[1, 0][PolyLog][1, 1/2]/Log[2]], 120]
%o A381898 (Python)
%o A381898 from mpmath import polylog, diff, exp, log, mp
%o A381898 mp.dps = 120
%o A381898 const = exp(-diff(lambda n: polylog(n, 1/2), 1)/log(2))
%o A381898 A381898 = [int(d) for d in mp.nstr(const, n=mp.dps)[:-1] if d != '.']
%Y A381898 Cf. A381456, A381900.
%K A381898 nonn,cons
%O A381898 1,2
%A A381898 _Jwalin Bhatt_, Mar 09 2025
%E A381898 a(120) corrected by _Sean A. Irvine_, Apr 14 2025
