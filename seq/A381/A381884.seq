%I A381884 #15 Mar 18 2025 12:23:15
%S A381884 0,0,1,0,1,2,0,1,0,3,0,1,0,0,4,0,1,0,0,4,5,0,1,0,3,4,0,6,0,1,2,0,4,0,
%T A381884 0,7,0,1,0,0,4,0,0,0,8,0,1,0,0,4,0,0,7,0,9,0,1,0,0,4,5,6,0,0,9,10,0,1,
%U A381884 0,3,4,5,0,0,0,9,0,11,0,1,0,0,4,0,0,0,0,9,0,0,12
%N A381884 Triangle read by rows: T(n, k) = 0 if n = 0 or k is not a quadratic residue modulo n, otherwise T(n, k) = k.
%e A381884 Triangle T(n, k) starts:
%e A381884   [0] 0;
%e A381884   [1] 0, 1;
%e A381884   [2] 0, 1, 2;
%e A381884   [3] 0, 1, 0, 3;
%e A381884   [4] 0, 1, 0, 0, 4;
%e A381884   [5] 0, 1, 0, 0, 4, 5;
%e A381884   [6] 0, 1, 0, 3, 4, 0, 6;
%e A381884   [7] 0, 1, 2, 0, 4, 0, 0, 7;
%e A381884   [8] 0, 1, 0, 0, 4, 0, 0, 0, 8;
%e A381884   [9] 0, 1, 0, 0, 4, 0, 0, 7, 0, 9;
%e A381884 .
%e A381884 Array Arow(n) = [T(j, n), j = 0.. ] starts:
%e A381884   [0] 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
%e A381884   [1] 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
%e A381884   [2] 0, 2, 2, 0, 0, 0, 0, 2, 0, 0, ...
%e A381884   [3] 0, 3, 3, 3, 0, 0, 3, 0, 0, 0, ...
%e A381884   [4] 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...
%e A381884   [5] 0, 5, 5, 0, 5, 5, 0, 0, 0, 0, ...
%e A381884   [6] 0, 6, 6, 6, 0, 6, 6, 0, 0, 0, ...
%e A381884   [7] 0, 7, 7, 7, 0, 0, 7, 7, 0, 7, ...
%e A381884   [8] 0, 8, 8, 0, 8, 0, 0, 8, 8, 0, ...
%e A381884   [9] 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, ...
%e A381884 .
%e A381884 3 is not a quadratic residue modulo 7, therefore T(7, 3) = 0.
%e A381884 12 is a quadratic residue modulo 23, therefore T(23, 12) = 12.
%p A381884 QR := (k, n) -> ifelse(n = 0 or NumberTheory:-QuadraticResidue(k, n) < 0, 0, 1):
%p A381884 T := (n, k) -> k*QR(k, n): seq(seq(T(n, k), k = 0..n), n = 0..12);
%p A381884 Arow := (n, len) -> seq(T(j, n), j=0..len): seq(lprint([n], Arow(n, 9), n=0..9);
%t A381884 QR[n_, k_] := Module[{x, y}, If[Reduce[x^2 == n + k*y, {x, y}, Integers] =!= False, 1, -1]];
%t A381884 T[n_, k_] := If[n == 0 || QR[k, n] < 0, 0, k];
%t A381884 Table[T[n, k], {n, 0, 12}, {k, 0, n}] // Flatten
%o A381884 (Python)
%o A381884 from sympy.ntheory import is_quad_residue
%o A381884 def QR(n, k): return is_quad_residue(n, k)
%o A381884 def T(n, k): return 0 if n == 0 or not QR(k, n) else k
%o A381884 for n in range(13): print([T(n, k) for k in range(n + 1)])
%Y A381884 Indices of the nonzero terms in row n of the array: A057126 (row 2), A057125 (row 3), A057762 (row 5), A262931 (row 6), A262932 (row 7).
%K A381884 nonn,tabl
%O A381884 0,6
%A A381884 _Peter Luschny_, Mar 17 2025
