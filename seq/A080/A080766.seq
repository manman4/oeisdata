%I A080766 #15 Sep 30 2025 14:57:27
%S A080766 2,6,14,21,240,240,242,5520,5566,6578,10881,13056,14880,15444,46200,
%T A080766 47908,57600,60480,65280,65292,91392,152320,169728,239540,285696,
%U A080766 399168,665280,702000,941625,1405404,2246400,4285440,4856832,6591375,10463040,11713536,13172544
%N A080766 A unitary phi reciprocal amicable number: consider two different numbers r, s which satisfy the following equation for some integer k: uphi(r) = uphi(s) = (1/k) * r * s / (r-s); or equivalently, 1/uphi(r) = 1/uphi(s) = k * (1/s - 1/r); sequence gives r numbers.
%C A080766 Here uphi(n) = A047994(n) is the unitary totient function: if n = Product p_i^e_i, uphi(n) = Product (p_i^e_i - 1).
%C A080766 Solutions sorted by increasing r, then increasing s, so repeated values are possible here; they occur at a(5) = a(6), a(59) = a(60), etc. - _Michael S. Branicky_, Sep 30 2025
%H A080766 Michael S. Branicky, <a href="/A080766/b080766.txt">Table of n, a(n) for n = 1..66</a>
%o A080766 (Python)
%o A080766 from math import prod
%o A080766 from sympy import factorint
%o A080766 from itertools import count, islice
%o A080766 def uphi(n): return prod(p_i**e_i-1 for p_i, e_i in factorint(n).items())
%o A080766 def agen(): # generator of terms (increasing r, then increasing s)
%o A080766     uphi_level_sets = dict()
%o A080766     for r in count(1):
%o A080766         v = uphi(r)
%o A080766         if v in uphi_level_sets:
%o A080766             for s in uphi_level_sets[v]:
%o A080766                 k, rem = divmod(r*s, v*(r-s))
%o A080766                 if rem == 0:
%o A080766                     yield r # use s, k for A080767, A080768, resp.
%o A080766         else:
%o A080766             uphi_level_sets[v] = []
%o A080766         uphi_level_sets[v].append(r)
%o A080766 print(list(islice(agen(), 25))) # _Michael S. Branicky_, Sep 30 2025
%Y A080766 Cf. A047994, A080767, A080768, A067739, A067741.
%K A080766 nonn
%O A080766 1,1
%A A080766 _Yasutoshi Kohmoto_
%E A080766 Kohmoto found 2nd, 6th, 13th, 25th terms. _Dean Hickerson_ calculated the other terms.
%E A080766 Offset corrected by _Sean A. Irvine_, Sep 29 2025
%E A080766 a(31) and beyond from _Michael S. Branicky_, Sep 29 2025
