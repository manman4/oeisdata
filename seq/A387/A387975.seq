%I A387975 #21 Oct 16 2025 15:42:43
%S A387975 1,1,1,1,1,1,1,1,1,3,1,5,1,3,3,4,1,5,1,5,3,2,1,7,2,2,3,5,1,7,1,5,2,2,
%T A387975 3,8,1,2,2,7,1,7,1,3,5,2,1,9,2,5,2,3,1,7,2,7,2,2,1,11,1,2,5,6,2,4,1,3,
%U A387975 2,7,1,11,1,2,5,3,2
%N A387975 Number of distinct positive integers reachable from n by successively dividing any contiguous substring of at least two digits by an integer d in 2..9, including n itself.
%C A387975 The substring may not begin with a zero digit and must be wholly divisible by the chosen digit.
%H A387975 Michael S. Branicky, <a href="/A387975/b387975.txt">Table of n, a(n) for n = 1..10000</a>
%e A387975 a(10) = 3 since 10 -> 5 or 10 -> 2, so there are 3 reachable numbers: {10, 5, 2}.
%e A387975 a(127) = 0 as follows. Its possible substrings to replace are 12 and 27.
%e A387975   From 12:
%e A387975     12/2 = 6 -> 67 (terminal)
%e A387975     12/3 = 4 -> 47 (terminal)
%e A387975     12/4 = 3 -> 37 (terminal)
%e A387975     12/6 = 2 -> 27
%e A387975   From 27:
%e A387975     27/3 = 9 -> 19 (terminal)
%e A387975     27/9 = 3 -> 13 (terminal)
%e A387975   Further reductions:
%e A387975     27 -> 9, 3; all others (67, 47, 37, 19, 13) are terminal.
%e A387975   9 distinct integers reachable (including 127): {127, 67, 47, 37, 27, 19, 13, 9, 3}.
%o A387975 (Python)
%o A387975 def children(s):
%o A387975     return set(int(s[:i]+str(q//d)+s[j:]) for i in range(len(s)-1) for j in range(i+2, len(s)+1) if (w:=s[i:j])[0]!='0' for d in range(2, 10) if (q:=int(w))%d==0)
%o A387975 def a(n):
%o A387975     reach, expand = {n}, [n]
%o A387975     while expand:
%o A387975         q = expand.pop()
%o A387975         for c in children(str(q)):
%o A387975             if c not in reach:
%o A387975                 reach.add(c)
%o A387975                 expand.append(c)
%o A387975     return len(reach)
%o A387975 print([a(n) for n in range(1, 78)])
%Y A387975 Cf. A389140, A387819, A387963, A389399.
%K A387975 nonn,base
%O A387975 1,10
%A A387975 _Michael S. Branicky_ and _Ali Sada_, Oct 12 2025
