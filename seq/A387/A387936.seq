%I A387936 #29 Oct 22 2025 22:08:14
%S A387936 1,5,9,42,236,184,462,5354,12268,5940,6006,118914,543119,737129,
%T A387936 257636,87516,2653224,20245479,53243052,50245691,13754842,1385670,
%U A387936 59852584,688208251,2966624012,5299096714,3800159752,857078907,23371634,1366581018,22117728455
%N A387936 Triangle read by rows: T(n,k) is the number of 4-dimensional balanced ballot paths of 4n steps with exactly k peaks.
%C A387936 The 4-dimensional balanced ballot path (multidimensional Dyck path) is a sequence of 4*n steps with initial point (0,0,0,0) and ending at (n,n,n,n) satisfying that each step is a standart unit vector and each point of the path satisfies x_1 >= x_2 >= x_3 >= x_4. With the given height function, only the steps of vector e_1 contribute positively to the height so they are up-steps (vectors e_2, e_3, e_4 are down-steps). A peak is a node, to which we have arrived with an up-step and left with a down-step.
%C A387936 T(n,k) is another 4-dimensional generalization of the Narayana numbers A001263.
%H A387936 Sean A. Irvine, <a href="/A387936/b387936.txt">Table of n, a(n) for n = 1..1275</a> (rows 1..50 flattened)
%e A387936 Triangle begins:
%e A387936   1;
%e A387936   5, 9;
%e A387936   42, 236, 184;
%e A387936   462, 5354, 12268, 5940;
%e A387936   6006, 118914, 543119, 737129, 257636;
%e A387936   87516, 2653224, 20245479, 53243052, 50245691, 13754842;
%e A387936   ...
%o A387936 (Python)
%o A387936 n = 6 # length - 3n
%o A387936 s = 6 # number of peaks - s
%o A387936 def count_dyck_words(x_rem, y_rem, z_rem, w_rem, x_used, y_used, z_used, w_used, last_char, s_needed):
%o A387936     if x_rem == y_rem == z_rem == w_rem == 0:
%o A387936         return 1 if s_needed == 0 else 0
%o A387936     if not (x_used >= y_used >= z_used >= w_used):
%o A387936         return 0
%o A387936     if s_needed < 0:
%o A387936         return 0
%o A387936     total = 0
%o A387936     if x_rem > 0:
%o A387936         total += count_dyck_words(x_rem - 1, y_rem, z_rem, w_rem,
%o A387936                                   x_used + 1, y_used, z_used, w_used,
%o A387936                                   0, s_needed)
%o A387936     if y_rem > 0 and x_used >= y_used + 1:
%o A387936         used = 1 if last_char == 0 else 0
%o A387936         total += count_dyck_words(x_rem, y_rem - 1, z_rem, w_rem,
%o A387936                                   x_used, y_used + 1, z_used, w_used,
%o A387936                                   1, s_needed - used)
%o A387936     if z_rem > 0 and y_used >= z_used + 1:
%o A387936         used = 1 if last_char == 0 else 0
%o A387936         total += count_dyck_words(x_rem, y_rem, z_rem - 1, w_rem,
%o A387936                                   x_used, y_used, z_used + 1, w_used,
%o A387936                                   2, s_needed - used)
%o A387936     if w_rem > 0 and z_used >= w_used + 1:
%o A387936         used = 1 if last_char == 0 else 0
%o A387936         total += count_dyck_words(x_rem, y_rem, z_rem, w_rem - 1,
%o A387936                                   x_used, y_used, z_used, w_used + 1,
%o A387936                                   3, s_needed - used)
%o A387936     return total
%o A387936 def main():
%o A387936     result = count_dyck_words(n, n, n, n, 0, 0, 0, 0, -1, s)
%o A387936     print(result)
%o A387936 if __name__ == "__main__":
%o A387936     main()
%Y A387936 Row sums are A005790.
%Y A387936 First column is A005789.
%K A387936 nonn,tabl,new
%O A387936 1,2
%A A387936 _Dimana Pramatarova_ and _Ryota Inagaki_, Oct 14 2025
%E A387936 More terms from _Sean A. Irvine_, Oct 22 2025
