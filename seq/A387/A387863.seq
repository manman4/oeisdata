%I A387863 #16 Sep 15 2025 19:57:12
%S A387863 7,23,31,47,89,113,139,157,199,211,241,293,317,479,523,619,773,839,
%T A387863 863,887,997,1021,1069,1129,1259,1327,1531,1637,1669,1759,1789,1847,
%U A387863 1913,1933,2161,2179,2399,2477,2557,2633,2803,2971,3023,3121,3137,3229,3271,3373
%N A387863 Primes p for which there are at least two integers p < n < q, all of whose prime factors are less than q - p, where q is the next prime following p.
%C A387863 Erdős (1976) conjectured that there are infinitely many primes with this property, but this remains unsolved.
%H A387863 Chai Wah Wu, <a href="/A387863/b387863.txt">Table of n, a(n) for n = 1..10000</a>
%H A387863 Thomas Bloom, <a href="https://www.erdosproblems.com/932">Erdős Problem #932</a>.
%H A387863 P. Erdős, <a href="https://users.renyi.hu/~p_erdos/1976-39.pdf">Problems and results on number theoretic properties of consecutive integers and related questions</a>. Proceedings of the Fifth Manitoba Conference on Numerical Mathematics (Univ. Manitoba, Winnipeg, Man., 1975) (1976), 25-44. See page 29.
%H A387863 Erdős problems database contributors, <a href="https://github.com/teorth/erdosproblems">Erdős problems database</a>. Maintained by Thomas Bloom and Terence Tao.
%F A387863 a(n) = prime(A387864(n)).
%e A387863 7 is a term because there are two integers, 8 and 9, between the consecutive primes 7 and 11, all of whose prime factors are less than 11 - 7 = 4.
%o A387863 (Python) from sympy import isprime, nextprime
%o A387863 def is_A387863(p):
%o A387863     if not isprime(p):
%o A387863         return False
%o A387863     q = nextprime(p)
%o A387863     prime_gap = q - p
%o A387863     count = 0
%o A387863     for k in range(p + 1, q):
%o A387863         largest_prime_factor = primefactors(k)[-1]
%o A387863         if largest_prime_factor < prime_gap:
%o A387863             count += 1
%o A387863             if count == 2:
%o A387863                 return True
%o A387863     return False
%o A387863 (Python)
%o A387863 from itertools import islice
%o A387863 from sympy import primerange, nextprime
%o A387863 def A387863_gen(): # generator of terms
%o A387863     p, q = 3, 5
%o A387863     while True:
%o A387863         plist, c = list(primerange(q-p)), 0
%o A387863         for n in range(p+1,q):
%o A387863             for r in plist:
%o A387863                 while True:
%o A387863                     a, b = divmod(n,r)
%o A387863                     if not b:
%o A387863                         n = a
%o A387863                     else:
%o A387863                         break
%o A387863             if n==1:
%o A387863                 c += 1
%o A387863             if c > 1:
%o A387863                 yield p
%o A387863                 break
%o A387863         p, q = q, nextprime(q)
%o A387863 A387863_list = list(islice(A387863_gen(),48)) # _Chai Wah Wu_, Sep 11 2025
%Y A387863 Cf. A387864 (indices of primes).
%K A387863 nonn
%O A387863 1,1
%A A387863 _David Radcliffe_, Sep 10 2025
