%I A387271 #50 Sep 17 2025 22:49:26
%S A387271 5,7,11,15,19,21,29,33,44,45,50,55,57,63,70,76,83,87,99,104,116,132,
%T A387271 135,140,142,146,150,163,165,171,178,189,194,196,208,210,220,228,245,
%U A387271 249,261,266,290,297,302,304,308,312,332,348,377,395,396,401,405
%N A387271 Positive integers whose ternary expansion has equal run-length multisets for digits 1 and 2.
%C A387271 Group the base-3 expansion of m > 0 into runs of equal digits and ignore 0-runs. m is a term if for each k >= 1 the number of 1-runs of length k equals the number of 2-runs of length k.
%C A387271 Sequence is infinite since it is closed under multiplication by powers of 3 (appending trailing zeros).
%C A387271 Invariant under digit-wise swap 1 <-> 2.
%H A387271 Ahmet Caglar Saygili, <a href="/A387271/b387271.txt">Table of n, a(n) for n = 1..10000</a>
%e A387271 395 = (112122)_3. Runs are 11, 2, 1, 22 with lengths [2,1,1,2]. The 1-run multiset is {1,2}; the 2-run multiset is {1,2}. So, 395 is a term.
%e A387271 405 = (120000)_3. Ignoring the trailing 0-run, the nonzero runs are 1, 2 (lengths 1 and 1), so it is also a term.
%t A387271 f[s_, d_] := Sort[Length /@ Select[s, AllTrue[#, #1 == d &] &]]; q[n_] := Module[{s = Split[IntegerDigits[n, 3]]}, f[s, 1] == f[s, 2]]; Select[Range[420], q] (* _Amiram Eldar_, Sep 14 2025 *)
%o A387271 (Julia)
%o A387271 function ok(n::Integer)
%o A387271     t = string(n; base=3)
%o A387271     counts1 = Dict{Int, Int}(); counts2 = Dict{Int, Int}(); prev = '0'; cnt = 0
%o A387271     for c in t*'0'
%o A387271         if c == prev
%o A387271             cnt += 1
%o A387271         else
%o A387271             if prev == '1'
%o A387271                 counts1[cnt] = get(counts1, cnt, 0) + 1
%o A387271             elseif prev == '2'
%o A387271                 counts2[cnt] = get(counts2, cnt, 0) + 1
%o A387271             end
%o A387271             prev = c; cnt = 1
%o A387271         end
%o A387271     end
%o A387271     counts1 == counts2
%o A387271 end
%o A387271 [k for k in 1:405 if ok(k)]
%o A387271 (Python)
%o A387271 from itertools import groupby
%o A387271 from collections import Counter
%o A387271 def ok(n: int) -> bool:
%o A387271     s, m = "", n # s will hold ternary string
%o A387271     while m:
%o A387271         s, m = str(m % 3) + s, m // 3
%o A387271     c1, c2 = Counter(), Counter()
%o A387271     for d, g in groupby(s):
%o A387271         L = sum(1 for _ in g)
%o A387271         if d == '1': c1[L] += 1
%o A387271         elif d == '2': c2[L] += 1
%o A387271     return c1 == c2
%o A387271 [a for a in range(1, 406) if ok(a)]
%Y A387271 Cf. A154391, A166751, A175061.
%K A387271 nonn,base
%O A387271 1,1
%A A387271 _Ahmet Caglar Saygili_, Aug 24 2025
