%I A126310 #15 Oct 01 2025 18:02:11
%S A126310 0,0,1,0,2,1,1,1,0,4,2,2,2,1,2,1,2,3,1,1,1,1,0,9,4,4,4,2,4,2,4,5,2,2,
%T A126310 2,2,1,4,2,2,2,1,4,2,6,7,3,2,2,3,1,2,1,2,3,1,2,3,3,1,1,1,1,1,0,23,9,9,
%U A126310 9,4,9,4,9,10,4,4,4,4,2,9,4,4,4,2,9,4,11,12,5,4,4,5,2,4,2,4,5,2,4,5,5
%N A126310 A014486-index for the Dyck path "derived" from the n-th Dyck path encoded by A014486(n).
%C A126310 According to Vaillé, the concept of "dérivation des ponts" is defined by Kreweras, in "Sur les éventails de segments" paper.
%H A126310 G. Kreweras, <a href="http://www.numdam.org/item?id=BURO_1970__15__3_0">Sur les éventails de segments</a>, Cahiers du Bureau Universitaire de Recherche Opérationelle, Cahier no. 15, Paris, 1970, pp. 3-41.
%H A126310 J. Vaillé, <a href="http://dx.doi.org/10.1006/eujc.1996.0089">Une Bijection Explicative de Plusieurs Propriétés Remarquables des Ponts</a>, European J. Combin. 18 (1997), no. 1, 117-124.
%F A126310 a(n) = A125986(A126309(A125985(n))).
%o A126310 (Scheme)
%o A126310 ;; function rising-list->binexp given in A125985:
%o A126310 (define (A126310 n) (A080300 (rising-list->binexp (reverse! (map -1+ (map length (A126310-aux1 (A036044 (A014486 n)))))))))
%o A126310 (define (A126310-aux1 n) (let loop ((n n) (vs (list)) (u 0) (d 0)) (cond ((zero? n) (if (null? vs) vs (reverse! (cdr vs)))) ((= 2 (modulo n 4)) (loop (/ n 2) (cons (list (+ 1 u)) vs) (+ u 1) d)) ((= 1 (modulo n 4)) (add-valley-abscisses! (+ d 1) vs) (loop (/ (- n 1) 2) vs u (+ d 1))) ((odd? n) (loop (/ (- n 1) 2) vs u (+ d 1))) (else (loop (/ n 2) vs (+ u 1) d)))))
%o A126310 (define (add-valley-abscisses! valley-abscisse peak-ordonnees) (for-each (lambda (s) (append! s (list valley-abscisse))) (keep-matching-items peak-ordonnees (lambda (po) (>= (car po) valley-abscisse)))))
%Y A126310 Cf. A125986, A126309, A125985.
%K A126310 nonn
%O A126310 0,5
%A A126310 _Antti Karttunen_, Jan 02 2007
