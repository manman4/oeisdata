%I A081230 #21 Oct 16 2025 19:16:45
%S A081230 1,0,1,2,3,3,4,6,8,8,9,10,11,13,16,17,18,19,22,23,26,26,28,30,32,33,
%T A081230 35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,
%U A081230 81,83,86,88,90,92,94,96,99,101,103,105,107,110,112,114,116,119,121,123,125
%N A081230 a(n) is the Levenshtein distance between n and n^n (where each is treated as a string).
%H A081230 Alois P. Heinz, <a href="/A081230/b081230.txt">Table of n, a(n) for n = 0..10000</a>
%H A081230 M. Gilleland, <a href="http://www.merriampark.com/ld.htm">Levenshtein Distance</a>. [It has been suggested that this algorithm gives incorrect results sometimes. - _N. J. A. Sloane_]
%e A081230 a(9)=8 since we can transform 9 into 9^9=387420489 by 8 insertions, namely inserting 3,8,7,4,2,0,4 and 8 in front of 9. a(2)=1 since we can transform 2 into 2^2=4 by one substitution, namely 4 for 2.
%p A081230 a:= n-> StringTools[Levenshtein](""||n,""||(n^n)):
%p A081230 seq(a(n), n=0..69);  # _Alois P. Heinz_, Oct 16 2025
%t A081230 levenshtein[s_List, t_List] := Module[{d, n = Length@s, m = Length@t}, Which[s === t, 0, n == 0, m, m == 0, n, s != t, d = Table[0, {m + 1}, {n + 1}]; d[[1, Range[n + 1]]] = Range[0, n]; d[[Range[m + 1], 1]] = Range[0, m]; Do[ d[[j + 1, i + 1]] = Min[d[[j, i + 1]] + 1, d[[j + 1, i]] + 1, d[[j, i]] + If[ s[[i]] === t[[j]], 0, 1]], {j, m}, {i, n}]; d[[ -1, -1]] ]];
%t A081230 f[n_] := levenshtein[IntegerDigits[n], IntegerDigits[n^n]]; Array[f, 69] (* _Robert G. Wilson v_ *)
%o A081230 (Python)
%o A081230 from Levenshtein import distance as LD
%o A081230 def a(n): return LD(str(n), str(n**n))
%o A081230 print([a(n) for n in range(70)]) # _Michael S. Branicky_, Oct 16 2025
%Y A081230 Cf. A000312, A081355.
%K A081230 nonn,base,changed
%O A081230 0,4
%A A081230 Francois Jooste (pin(AT)myway.com), Mar 11 2003
%E A081230 Corrected by _Robert G. Wilson v_, Jan 25 2006
%E A081230 a(0)=1 prepended by _Alois P. Heinz_, Oct 16 2025
