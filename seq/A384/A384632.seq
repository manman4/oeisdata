%I A384632 #13 Jun 17 2025 18:00:47
%S A384632 0,1,2,3,4,6,12,5,7,16,24,8,18,9,10,30,11,36,48,13,14,15,17,19,20,21,
%T A384632 28,22,40,23,25,26,27,29,32,31,42,33,60,34,35,37,38,39,54,41,43,44,45,
%U A384632 46,49,47,50,51,52,53,56,55,72,57,58,62,59,63,61,64,65
%N A384632 a(0)=0. For each digit d in the sequence, let a(n) equal the smallest unused integer which has at least d divisors.
%e A384632 a(0) = 0.
%e A384632 a(1) = Smallest unused integer with at least 0 divisors = 1.
%e A384632 a(2) = Smallest unused integer with at least 1 divisor = 2.
%e A384632 a(3) = Smallest unused integer with at least 2 divisors = 3.
%e A384632 a(4) = Smallest unused integer with at least 3 divisors = 4.
%e A384632 a(5) = Smallest unused integer with at least 4 divisors = 6.
%e A384632 a(6) = Smallest unused integer with at least 6 divisors = 12.
%e A384632 a(7) = Smallest unused integer with at least 1 divisor = 5.
%e A384632 a(8) = Smallest unused integer with at least 2 divisors = 7.
%o A384632 (Python)
%o A384632 from sympy import divisor_count
%o A384632 a = [0]
%o A384632 for n in range(100):
%o A384632     if a[n] >= 10:
%o A384632         split = [int(d) for d in str(a[n])]
%o A384632     else:
%o A384632         split = [a[n]]
%o A384632     for s in split:
%o A384632         num = 1
%o A384632         while True:
%o A384632             if divisor_count(num) >= s and num not in a:
%o A384632                 a.append(num)
%o A384632                 break
%o A384632             num += 1
%o A384632 print(a)
%Y A384632 Cf. A000005, A362371, A362551.
%K A384632 nonn,base
%O A384632 0,3
%A A384632 _Gavin Lupo_, Jun 05 2025
