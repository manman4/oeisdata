%I A318253 #17 Sep 22 2025 16:01:30
%S A318253 0,0,1,0,1,0,0,1,-2,0,0,1,-9,16,0,0,1,-34,477,-272,0,0,1,-125,11056,
%T A318253 -74601,7936,0,0,1,-461,249250,-14873104,25740261,-353792,0,0,1,-1715,
%U A318253 5699149,-2886735625,56814228736,-16591655817,22368256,0,0,1,-6434,132908041,-574688719793,122209131374375,-495812444583424,17929265150637,-1903757312,0
%N A318253 Coefficient of x of the OmegaPolynomials (A318146), T(n, k) = [x] P(n, k) with n>=1 and k>=0, square array read by ascending antidiagonals.
%C A318253 Because in the case n=2 these numbers are the classical signed tangent numbers (A000182) we call T(n, k) also 'generalized tangent numbers' when studied in connection with generalized Bernoulli numbers.
%F A318253 T(n, k) is the derivative of OmegaPolynomial(n, k) evaluated at x = 0.
%F A318253 Apart from the border cases n=1 and k=0 the generalized tangent numbers are a subset of the André numbers A181937; more precisely: T(n, k) is 1 if k = 1 else if k = 0 or n = 1 then T(n, k) = 0 else T(n,k) = (-1)^(n+1)*A181937(n, n*k-1).
%e A318253 [n\k][0  1     2        3              4                   5  ...]
%e A318253 ------------------------------------------------------------------
%e A318253 [1]   0, 1,    0,       0,             0,                  0, ...  [A063524]
%e A318253 [2]   0, 1,   -2,      16,          -272,               7936, ...  [A000182]
%e A318253 [3]   0, 1,   -9,     477,        -74601,           25740261, ...  [A293951]
%e A318253 [4]   0, 1,  -34,   11056,     -14873104,        56814228736, ...  [A273352]
%e A318253 [5]   0, 1, -125,  249250,   -2886735625,    122209131374375, ...  [A318258]
%e A318253 [6]   0, 1, -461, 5699149, -574688719793, 272692888959243481, ...
%e A318253         [A010763]
%p A318253 # Prints square array row-wise. The function OmegaPolynomial is defined in A318146.
%p A318253 for n from 1 to 6 do seq(coeff(OmegaPolynomial(n, k), x, 1), k=0..6) od;
%p A318253 # In the sequence format:
%p A318253 0, seq(seq(coeff(OmegaPolynomial(n-k+1, k), x, 1), k=0..n), n=1..9);
%p A318253 # Alternatively, based on the recurrence of the André numbers:
%p A318253 ANum := proc(m, n) option remember; if n = 0 then return 1 fi;
%p A318253 `if`(modp(n, m) = 0, -1, 1);  [seq(m*k, k=0..(n-1)/m)];
%p A318253 %%*add(binomial(n, k)*ANum(m, k), k in %) end:
%p A318253 TNum := proc(n,k) if k=1 then 1 elif k=0 or n=1 then 0 else ANum(n, n*k-1) fi end:
%p A318253 for n from 1 to 6 do seq(TNum(n, k), k = 0..6) od;
%t A318253 OmegaPolynomial[m_, n_] := Module[{S}, S = Series[MittagLefflerE[m, z]^x, {z, 0, 10}]; Expand[(m*n)! Coefficient[S, z, n]]];
%t A318253 T[n_, k_] := D[OmegaPolynomial[n, k], x] /. x -> 0;
%t A318253 Table[T[n - k, k], {n, 1, 10}, {k, 0, n - 1}] // Flatten (* _Jean-François Alcover_, Nov 27 2023 *)
%o A318253 (SageMath)
%o A318253 # Prints the array row-wise. The function OmegaPolynomial is in A318146.
%o A318253 for m in (1..6):
%o A318253     print([0] + [list(OmegaPolynomial(m, n))[1] for n in (1..6)])
%o A318253 # Alternatively, based on the recurrence of the André numbers:
%o A318253 @cached_function
%o A318253 def ANum(m, n):
%o A318253     if n == 0: return 1
%o A318253     t = [m*k for k in (0..(n-1)//m)]
%o A318253     s = sum(binomial(n, k)*ANum(m, k) for k in t)
%o A318253     return -s if m.divides(n) else s
%o A318253 def TNum(m, n):
%o A318253     if n == 1: return 1
%o A318253     if n == 0 or m == 1: return 0
%o A318253     return ANum(m, m*n-1)
%o A318253 for m in (1..6): print([TNum(m, n) for n in (0..6)])
%Y A318253 Cf. A318146, A181937, A063524, A000182, A293951, A273352, A318258.
%K A318253 sign,tabl
%O A318253 1,9
%A A318253 _Peter Luschny_, Aug 22 2018
