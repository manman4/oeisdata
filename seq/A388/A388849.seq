%I A388849 #35 Oct 24 2025 18:16:48
%S A388849 1,1,1,2,2,3,3,5,6,8,8,12,12,15,17,23,23,30,30,40,43,51,51,68,71,83,
%T A388849 89,107,107,133,133,158,166,189,195,241,241,271,283,335,335,393,393,
%U A388849 452,478,529,529,629,635,716,739,834,834,954,970,1097,1127,1234,1234,1438
%N A388849 Number of polynomials P in the set S such that P(1)=n, where S is defined by: (i) 1 is in S; (ii) P is in S implies 1+x*P is in S; (iii) P is in S and Q is in S implies P*Q is in S.
%C A388849 If the repeated application of (i), (ii), (iii) fails to prove that P is in S, then P is not in S.
%C A388849 For n=1..17, a(n) = A130841(n), but a(18) = 30 != A130841(18) = 31. The gap further increases onward. The reason for the difference for the 18-th term is: (1+x)*(1+x*(1+x)*(1+x+x^2+x^3)) = (1+x+x^2)*(1+x*(1+x*(1+x)*(1+x))). Two ways of applying the rules can produce the same polynomial. The substitution x=1 and the erasure of all the "1*" 's provides the corresponding counted expressions in A130841: (1+1)*(1+(1+1)*(1+1+1+1)) and (1+1+1)*(1+1+(1+1)*(1+1)), which are considered distinct.
%C A388849 If P(1)=k, then 1+P(1)=k+1. If P(1)=k and Q(1)=j, then (P*Q)(1)=k*j. These two rules allow for incremental computation of a(n) from previously computed sets of polynomials, see Linked Java and Prolog. - _Sean A. Irvine_, Oct 24 2025
%H A388849 Sean A. Irvine, <a href="/A388849/b388849.txt">Table of n, a(n) for n = 1..250</a>
%H A388849 Sean A. Irvine, <a href="https://github.com/archmageirvine/joeis/blob/master/src/irvine/oeis/a388/A388849.java">Java program</a> (github)
%H A388849 Luc Rousseau, <a href="/A388849/a388849.pl.txt">Prolog program</a>.
%e A388849 By applying (i), 1 is in S.
%e A388849 By applying (ii) to 1, 1+x*1 = 1+x is in S.
%e A388849 By applying (ii) to 1+x, 1+x*(1+x) = 1+x+x^2 is in S.
%e A388849 By applying (ii) to 1+x+x^2, 1+x*(1+x+x^2) = 1+x+x^2+x^3 is in S.
%e A388849 By applying (iii) to 1+x and 1+x, (1+x)*(1+x) = 1+2x+x^2 is in S.
%e A388849 Evaluated at 1, the above polynomials yield respectively 1, 2, 3, 4, 4; that proves that a(1)>=1, a(2)>=1, a(3)>=1 and a(4)>=2.
%e A388849 Actually, the equalities a(1)=1, a(2)=1, a(3)=1 and a(4)=2 hold: because rules (ii) and (iii) strictly increase the evaluations at 1, it is possible to use algorithms that exhaust the search for polynomials P with a given P(1) and they tell that the polynomials listed above are the only ones that evaluate to 1, 2, 3 or 4 at 1.
%o A388849 (Prolog) % See Rousseau link.
%Y A388849 Cf. A130841.
%K A388849 nonn,new
%O A388849 1,4
%A A388849 _Luc Rousseau_, Oct 19 2025
