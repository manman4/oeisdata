%I A266322 #15 Sep 22 2025 16:01:23
%S A266322 0,1,3,4,5,6,9,10,13,15,16,17,19,21,25,28,31,33,36,37,41,45,46,49,51,
%T A266322 55,61,64,65,66,73,76,78,81,85,91,97,99,100,101,105,106,109,113,120,
%U A266322 121,129,136,141,144,145,148,153,161,163,166,169,171,176,181,190
%N A266322 Genera of complete intersection curves.
%H A266322 Pieter Belmans, <a href="/A266322/b266322.txt">Table of n, a(n) for n = 1..215</a>
%H A266322 P. Deligne and N. Katz, <a href="https://publications.ias.edu/node/358">Groupes de monodromie en géométrie algébrique</a> (SGA 7 II), Springer-Verlag, 1973, pages 39-61.
%o A266322 (SageMath)
%o A266322 def genus(degrees):
%o A266322   n = len(degrees) + 1
%o A266322   return 1 + 1 / 2 * prod(degrees) * (sum(degrees) - n - 1)
%o A266322 """
%o A266322 Generate a list of all genera of complete intersection curves up to a cutoff.
%o A266322 Observe that the genus strictly increases if we increase the degree of a defining equation, while adding a hyperplane section keeps the degree fixed.
%o A266322 So we can obtain all low genera starting from the line in P^2, and increasing the number of equations and the degrees of the defining equations
%o A266322 """
%o A266322 def listOfGenera(cutoff):
%o A266322   queue = [(1,)]
%o A266322   genera = []
%o A266322   while len(queue) > 0:
%o A266322     degrees = queue.pop()
%o A266322     g = genus(degrees)
%o A266322     if g < cutoff:
%o A266322       # if we haven't found this one yet we add it to the list
%o A266322       if g not in genera:
%o A266322         genera.append(g)
%o A266322         # use this to get information on how to realize a curve
%o A266322         # print (g, degrees)
%o A266322       # add all valid (d_1,...,d_i+1,...,d_{n-1})
%o A266322       for i in range(len(degrees)):
%o A266322         new = list(degrees)
%o A266322         new[i] = new[i] + 1
%o A266322         # we only look at increasing lists of degrees
%o A266322         if sorted(new) == new:
%o A266322           queue.append(tuple(new))
%o A266322       # add (d_1,...,d_{n-1},2): with ,1 at the end genus is constant
%o A266322       queue.append(degrees + (2,))
%o A266322   return sorted(genera)
%K A266322 nonn
%O A266322 1,3
%A A266322 _Pieter Belmans_, Dec 27 2015
