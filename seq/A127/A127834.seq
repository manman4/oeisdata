%I A127834 #13 Sep 22 2025 16:00:52
%S A127834 23,29,46,58,71,92,113,116,139,142,163,184,197,209,226,232
%N A127834 Numbers whose 8-bit binary representation, when rotated by up to one bit, contains every 3-bit binary representation for the numbers 0 through 7.
%C A127834 The binary representations of these numbers are equivalent under rotation / complement.
%C A127834 When this binary representation, with two bits from one end concatenated to the other, is given as input to an elementary cellular automaton, the first line of output will uniquely identify the rule of the automaton.
%H A127834 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/ElementaryCellularAutomaton.html">Elementary Cellular Automaton</a>
%e A127834 23 has the 8-bit representation 00010111.
%e A127834 Concatenate the last two digits onto the beginning to get 1100010111.
%e A127834 We read off the 3-bit substrings:
%e A127834 110
%e A127834 100
%e A127834 000
%e A127834 001
%e A127834 010
%e A127834 101
%e A127834 011
%e A127834 111
%o A127834 (SageMath)
%o A127834 i = 0
%o A127834 while i < 256:
%o A127834     bin = i.binary()
%o A127834     bin = bin[ -2:] + "0"*(8-len(bin)) + bin
%o A127834     subs = []
%o A127834     for j in range(8):
%o A127834         k = bin[j:j+3]
%o A127834         if k not in subs:
%o A127834             subs.append(k)
%o A127834         else: break
%o A127834     if len(subs) == 8: print(i)
%o A127834     i += 1
%K A127834 fini,full,nonn
%O A127834 1,1
%A A127834 _Tomas Boothby_, Feb 01 2007
