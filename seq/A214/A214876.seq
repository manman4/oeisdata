%I A214876 #37 Sep 22 2025 16:01:10
%S A214876 3,5,23,41,59,61,107,139,149,173,181,233,239,251,269,281,311,331,349,
%T A214876 359,389,397,439,457,461,463,467,487,509,547,577,587,647,653,719,751,
%U A214876 769,809,811,829,877,883,907,919,941,967,1039,1069,1097,1103,1109,1213
%N A214876 Prime numbers for which there is a primitive root g for which the iteration  x -> g^x (mod p) generates all nonzero residues (mod p).
%C A214876 Recent works by Holden, Pomerance et al. have established that for every prime p>2 there is a primitive root g modulo p which has a fixed point: g^x = x (mod p). This sequence shows in fact not every prime has a primitive root which generates all nonzero residues by iterated exponentiation. This sequence may have applications to random number generation, where long periods are usually required.
%H A214876 Alasdair McAndrew, <a href="/A214876/b214876.txt">Table of n, a(n) for n = 1..1884</a>
%H A214876 M. Levin, C Pomerance, and K. Soundararajan, <a href="http://www.math.dartmouth.edu/~carlp/brizolisants.pdf">Fixed points for discrete logarithms</a>, Lecture Notes in Computer Science, 2010, Volume 6197, Algorithmic Number Theory, pages 6-15.
%t A214876 testcyclic[p_] := (g = 1; out = False; While[out == False && g < p-2, g += 1; If[ MultiplicativeOrder[g, p] == p-1, x = g; c = 1; While[x != 1, x = PowerMod[g, x, p];  c += 1]; If[c == p-1, out = True]]]; Return[out]);
%t A214876 testcyclic[3] = True;
%t A214876 Reap[ Do[ If[ testcyclic[p], Print[p]; Sow[p]], {p, Prime /@ Range[200]}]][[2, 1]]
%t A214876 (* _Jean-FranÃ§ois Alcover_, Sep 17 2012, translated from Sage *)
%o A214876 (SageMath)
%o A214876 def testcyclic(p):
%o A214876     if p == 3: return True
%o A214876     g = 1
%o A214876     out = False
%o A214876     while not out and g<p-2:
%o A214876         g += 1
%o A214876         if mod(g,p).multiplicative_order()==p-1:
%o A214876             x = g
%o A214876             c = 1
%o A214876             while (x != 1):
%o A214876                 x = power_mod(g,x,p)
%o A214876                 c += 1
%o A214876             if c==p-1:
%o A214876                 out = True
%o A214876     return out
%o A214876 for p in primes(400):
%o A214876     if testcyclic(p): print(p)
%o A214876 (PARI) has(g)=my(x=g); for(i=4,g.mod, x=g^lift(x); if(x==1, return(0))); 1
%o A214876 is(n)=if(!isprime(n), return(0)); my(r=znprimroot(n),g=1); for(k=1,n, g*=r; if(gcd(k,n-1)==1 && has(g), return(n>2))); 0 \\ _Charles R Greathouse IV_, Jul 31 2016
%K A214876 nonn,nice
%O A214876 1,1
%A A214876 _Alasdair McAndrew_, Jul 28 2012
