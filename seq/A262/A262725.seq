%I A262725 #61 Sep 22 2025 16:01:22
%S A262725 1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,-1,1,1,
%T A262725 -1,-1,1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,1,-1,1,-1,-1,1,1,-1,
%U A262725 -1,1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1
%N A262725 The unique function f with f(1)=1 and f(jD!+k)=(-1)^j f(k) for all D, j=1..D, and k=1..D!.
%C A262725 sup_n |Sum_{j=1..n} f(jd)| is finite (but not bounded) for all d, thus giving a counterexample to a strong form of the Erdős discrepancy conjecture (see Remark 1.14 on p. 7 of Tao paper).
%H A262725 Antti Karttunen, <a href="/A262725/b262725.txt">Table of n, a(n) for n = 1..40320</a>
%H A262725 Terence Tao, <a href="http://arxiv.org/abs/1509.05363">The Erdős discrepancy problem</a>, arXiv:1509.05363 [math.CO], 2016.
%H A262725 <a href="/index/Fa#facbase">Index entries for sequences related to factorial base representation</a>
%F A262725 a(n) = (-1)^A034968(n-1). - _Antti Karttunen_ and _Peter Munn_, Aug 09 2024
%t A262725 (* Generates terms recursively, using definition *)
%t A262725 Module[{dmax = 4, i = 2, a}, a = Table[1, (dmax+1)!]; For[d = 1, d <= dmax, d++, For[j = 1, j <= d, j++, For[k = 1, k <= d!, k++, a[[i++]] = (-1)^j*a[[k]]]]]; a] (* _Paolo Xausa_, Aug 10 2024 *)
%t A262725 (* Generates terms individually, via A034968 (slower) *)
%t A262725 A034968[n_] := Module[{a = n, i = 2}, While[i! <= n, a-=(i-1)*Floor[n/i++!]]; a];
%t A262725 Array[(-1)^A034968[#] &, 5!, 0] (* _Paolo Xausa_, Aug 10 2024 *)
%o A262725 (SageMath)
%o A262725 A=[1,1]
%o A262725 for D in [1..4]:
%o A262725     j=1
%o A262725     while j<=D:
%o A262725         k=1
%o A262725         while k<=factorial(D):
%o A262725             A.append((-1)^j*A[k])
%o A262725             k+=1
%o A262725         j+=1
%o A262725 A[1:73] # _Tom Edgar_, Sep 29 2015
%o A262725 (PARI)
%o A262725 A034968(n) = { my(s=0, b=2, d); while(n, d = (n%b); s += d; n = (n-d)/b; b++); (s); };
%o A262725 A262725(n) = ((-1)^A034968(n-1)); \\ _Antti Karttunen_, Aug 09 2024
%o A262725 (Python)
%o A262725 from math import factorial
%o A262725 def aupto(n):
%o A262725     f = [1, 1]
%o A262725     for D in range(1, 5):
%o A262725         for j in range(1, D + 1):
%o A262725             sign = (-1) ** j
%o A262725             f.extend(sign * f[k] for k in range(1, factorial(D) + 1))
%o A262725     return f[1:n] # _Paul Muljadi_, Sep 26 2024
%Y A262725 Cf. A034968, A237695, A374468.
%Y A262725 Cf. also A343785 (another example from Tao paper).
%K A262725 easy,sign
%O A262725 1
%A A262725 _Terence Tao_, Sep 28 2015
