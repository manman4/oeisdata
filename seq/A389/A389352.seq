%I A389352 #40 Oct 17 2025 04:24:32
%S A389352 0,1,2,1,2,1,2,3,4,3,2,3,4,3,2,3,4,5,6,5,4,3,4,5,6,5,4,3,4,5,6,7,8,7,
%T A389352 6,5,4,5,6,7,8,7,6,5,4,5,6,7,8,9,10,9,8,7,6,5,6,7,8,9,10,9,8,7,6,5,6,
%U A389352 7,8,9,10,11,12,11,10,9,8,7,6,7,8,9,10,11,12,11,10,9,8,7,6
%N A389352 Manhattan distance to the origin of point n while traversing the half plane by integer points in rectangular layers starting from n=1 at the origin.
%H A389352 Jens Ahlström, <a href="/A389352/b389352.txt">Table of n, a(n) for n = 1..10000</a>
%F A389352 a(n) = |A389649(n)| + A389648(n).
%e A389352 Path begins:
%e A389352       25--24--23--22--21--20--19    Y=3
%e A389352        |                       |
%e A389352       26   9--10--11--12--13  18    Y=2
%e A389352        |   |               |   |
%e A389352       27   8   5---4---3  14  17    Y=1
%e A389352        |   |   |       |   |   |
%e A389352       28   7---6   1---2  15--16    Y=0
%e A389352      ----------------------------
%e A389352   X = -3  -2  -1   0   1   2   3
%e A389352 For n=8, the path has come to the point (-2, 1), which has the Manhattan distance a(8) = abs(-2) + abs(1) = 3.
%o A389352 (Python)
%o A389352 def traverse_upper_halfplane(n):
%o A389352     points = [(0, 0)]
%o A389352     arch = 1
%o A389352     sign = 1
%o A389352     while len(points) < n:
%o A389352         for y in range(arch+1):
%o A389352             points.append((sign*arch, y))
%o A389352         for x in range(arch-1, -arch-1, -1):
%o A389352             points.append((sign*x, arch))
%o A389352         for y in range(arch-1, -1, -1):
%o A389352             points.append((-sign*arch, y))
%o A389352         arch += 1
%o A389352         sign = - sign
%o A389352     return points[:n]
%o A389352 l = [abs(x)+y for (x,y) in traverse_upper_halfplane(91)]
%o A389352 print(l)
%Y A389352 Cf. A213088 (quadrant), A214526 (whole plane), A389648 (Y), A389649 (X).
%K A389352 nonn,easy,changed
%O A389352 1,3
%A A389352 _Jens Ahlström_, Oct 01 2025
