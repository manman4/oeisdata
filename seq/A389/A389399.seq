%I A389399 #14 Oct 09 2025 23:38:34
%S A389399 1,2,1,3,1,2,1,4,1,2,1,4,1,6,1,6,1,8,1,3,2,6,2,9,2,8,2,12,2,2,1,8,1,
%T A389399 10,1,10,1,12,1,4,3,8,3,12,3,10,3,16,3,3,1,10,1,13,1,14,1,16,1,3,2,10,
%U A389399 2,13,2,12,2,16,2,2,1,12,1,14,1,14,1,16,1,5
%N A389399 Number of distinct positive integers reachable from n by successively dividing a contiguous substring of digits by 2, including n itself.
%C A389399 The substring replaced must be even and cannot begin with a 0 digit.
%H A389399 Michael S. Branicky, <a href="/A389399/b389399.txt">Table of n, a(n) for n = 1..10000</a>
%F A389399 a(n) = 1 for n in A014261.
%e A389399 a(12) = 4 since 12 can either go to 11 (halving "2") or to 6 (halving "12"). 6 can be halved to 3. So, the reachable set has 4 numbers: {12,11,6,3}.
%e A389399 a(165) = 6 since 165 can either go to 135 (halving "6") or to 85 (halving "16"). 85 can then go to 45 (halving "8"), 45 to 25 (halving "4"), and 25 to 15 (halving "2"). No further moves are possible. So, the reachable set has 6 numbers: {165,135,85,45,25,15}.
%o A389399 (Python)
%o A389399 def children(n):
%o A389399     s = str(n)
%o A389399     return set(int(s[:i]+str(q>>1)+s[j:]) for i in range(len(s)) for j in range(i+1, len(s)+1) if (w:=s[i:j])[0]!='0' and (q:=int(w))&1==0)
%o A389399 def a(n):
%o A389399     if set(str(n)) <= set("13579"): return 1
%o A389399     reach, expand = {n}, [n]
%o A389399     while expand:
%o A389399         q = expand.pop()
%o A389399         for c in children(q):
%o A389399             if c not in reach:
%o A389399                 reach.add(c)
%o A389399                 expand.append(c)
%o A389399     return len(reach)
%o A389399 print([a(n) for n in range(1, 81)])
%Y A389399 Cf. A014261, A386395, A389140, A389141.
%K A389399 nonn,base,new
%O A389399 1,2
%A A389399 _Michael S. Branicky_ and _Ali Sada_, Oct 02 2025
