%I A389649 #20 Oct 15 2025 18:24:13
%S A389649 0,1,1,0,-1,-1,-2,-2,-2,-1,0,1,2,2,2,3,3,3,3,2,1,0,-1,-2,-3,-3,-3,-3,
%T A389649 -4,-4,-4,-4,-4,-3,-2,-1,0,1,2,3,4,4,4,4,4,5,5,5,5,5,5,4,3,2,1,0,-1,
%U A389649 -2,-3,-4,-5,-5,-5,-5,-5,-5,-6,-6,-6,-6,-6,-6,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,6,6,6,6,6,6,7
%N A389649 X coordinate of point n while traversing the half plane by integer points in rectangular layers starting from n=1 at the origin.
%H A389649 <a href="/index/Con#coordinates_2D_curves">Index entries for sequences related to coordinates of 2D curves</a>
%e A389649 Path begins:
%e A389649       25--24--23--22--21--20--19    Y=3
%e A389649        |                       |
%e A389649       26   9--10--11--12--13  18    Y=2
%e A389649        |   |               |   |
%e A389649       27   8   5---4---3  14  17    Y=1
%e A389649        |   |   |       |   |   |
%e A389649       28   7---6   1---2  15--16    Y=0
%e A389649      ----------------------------
%e A389649   X = -3  -2  -1   0   1   2   3
%e A389649 For n=8, the path has come to the point (-2, 1), which has the X coordinate a(8) = -2.
%o A389649 (Python)
%o A389649 def traverse_upper_halfplane(n):
%o A389649     points = [(0, 0)]
%o A389649     arch = 1
%o A389649     sign = 1
%o A389649     while len(points) < n:
%o A389649         for y in range(arch+1):
%o A389649             points.append((sign*arch, y))
%o A389649         for x in range(arch-1, -arch-1, -1):
%o A389649             points.append((sign*x, arch))
%o A389649         for y in range(arch-1, -1, -1):
%o A389649             points.append((-sign*arch, y))
%o A389649         arch += 1
%o A389649         sign = - sign
%o A389649     return points[:n]
%o A389649 l = [x for (x, y) in traverse_upper_halfplane(92)]
%o A389649 print(l)
%Y A389649 Cf. A389648 (Y), A389352 (Manhattan distance).
%Y A389649 Cf. A174344 (whole plane), A025581 (first quadrant).
%K A389649 sign,easy,new
%O A389649 1,7
%A A389649 _Jens AhlstrÃ¶m_, Oct 09 2025
