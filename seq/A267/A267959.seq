%I A267959 #17 Sep 22 2025 16:01:23
%S A267959 1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
%T A267959 1,1,1,1,0,1,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,
%U A267959 1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1
%N A267959 Triangle read by rows: T(n,k) = 1 if the generalized binomial coefficient (n,k)_f is an integer for every multiplicative function f; otherwise T(n,k) = 0.
%C A267959 For 0 <= k <= n, we define (n,k)_f := Product_{i=1..n}f(i)/(Product_{i=1..k}f(i) * Product_{i=1..n-k}f(i)).
%C A267959 T(n,k) = 1 if and only if for every prime p <= n there exists an index s_p >= 0 such that e(n,n-k,i,p) = 1 for all 0 <= i < s_p and e(n,n-k,i,p) = 0 for all i >= s_p where e(n,n-k,i,p) represents the value of the carry in the i-th position when adding the base-p representations of n and n-k (see Corollary 12 in Edgar-Spivey reference).
%C A267959 T(n,0) = 1 and T(n,1) = 1 for all n.
%C A267959 T(n,2) = 1 if and only if n == 2 (mod 4) or n == 3 (mod 4).
%H A267959 Tom Edgar and Michael Z. Spivey, <a href="https://cs.uwaterloo.ca/journals/JIS/VOL19/Edgar/edgar3.html">Multiplicative functions, generalized binomial coefficients, and generalized Catalan numbers</a>, Journal of Integer Sequences, Vol. 19 (2016), Article 16.1.6.
%H A267959 Tom Edgar, <a href="/A267959/a267959.pdf">Triangular array image.</a> This image is Figure 1 in Edgar-Spivey reference; it shows rows 0-90 of the triangle with shaded entries corresponding to 1 and other entries corresponding to 0.
%o A267959 (SageMath)
%o A267959 def carry_sequence(n,k,p):
%o A267959     M=(n-k).digits(base=p)
%o A267959     K=k.digits(base=p)
%o A267959     mm=max(len(K),len(M))
%o A267959     M=M+(mm-len(M)+1)*[0]
%o A267959     K=K+(mm-len(K)+1)*[0]
%o A267959     CS=[floor((M[0]+K[0])/p)]
%o A267959     for i in [1..mm]:
%o A267959         CS.append(floor((M[i]+K[i]+CS[i-1])/p))
%o A267959     return CS
%o A267959 def checkcarrysequence(n,k,p):
%o A267959     CS=carry_sequence(n,k,p)
%o A267959     if 0 in CS:
%o A267959         T=CS[CS.index(0):]
%o A267959         if T==len(T)*[0]:
%o A267959             return true
%o A267959         else:
%o A267959             return false
%o A267959     else:
%o A267959         return true
%o A267959 def T(n,k):
%o A267959     flag=true
%o A267959     for x in prime_range(n+1):
%o A267959         if not(checkcarrysequence(n,k,x)):
%o A267959             flag=false
%o A267959     return Integer(flag)
%o A267959 T=[[T(i,j) for j in [0..i]] for i in [0..20]]
%o A267959 [x for sublist in T for x in sublist]
%K A267959 nonn,tabl
%O A267959 0
%A A267959 _Tom Edgar_ and Michael Z. Spivey, Jan 22 2016
