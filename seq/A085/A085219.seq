%I A085219 #11 Oct 01 2025 18:02:11
%S A085219 0,1,1,2,5,2,3,15,14,3,4,17,56,15,4,5,21,62,57,22,5,6,23,80,63,88,23,
%T A085219 6,7,57,86,81,94,89,54,7,8,59,272,87,112,95,270,55,8,9,63,278,273,118,
%U A085219 113,294,271,56,9,10,65,296,279,424,119,390,295,272,57,10,11,69,302,297,430
%N A085219 Array A(x,y): "rised concatenation" of factorial expansions of x & y, listed antidiagonalwise as A(0,0), A(1,0), A(0,1), A(2,0), A(1,1), A(0,2), ... Zero is expanded as an empty string.
%C A085219 This is otherwise like A085215, except that to each digit in the factorial expansion of 'x' is added the most significant digit in the factorial expansion of 'y'.
%e A085219 To get A(4,3) = 81 we take the factorial expansions of 4 (= '20') and 3 (= '11') and then we add 1 to each digit of the former to get '31', before concatenating them as '3111' (3*24+1*6+1*2+1*1 = 81). Similarly, for A(3,4) = 94 we add 2 to 3's expansion '11' to get '33' and then the concatenation yields '3320' (3*24+3*6+2*2=94). See A085221 for the corresponding factorial expansions.
%o A085219 (Scheme) (define (A085219bi x y) (let loop ((x x) (y y) (i 2) (j (1+ (A084558 y))) (r (car (n->factbase y)))) (cond ((zero? x) y) (else (loop (floor->exact (/ x i)) (+ (* (A000142 j) (+ r (modulo x i))) y) (1+ i) (1+ j) r)))))
%o A085219 (define (n->factbase n) (let loop ((n n) (fex (if (zero? n) (list 0) (list))) (i 2)) (cond ((zero? n) fex) (else (loop (floor->exact (/ n i)) (cons (modulo n i) fex) (1+ i))))))
%o A085219 (define (A085219 n) (A085219bi (A025581 n) (A002262 n)))
%o A085219 (define (A085220 n) (A085219bi (A002262 n) (A025581 n)))
%Y A085219 Transpose: A085220. Can be used to compute A085203. Cf. A000142, A007623, A084558, A025581, A002262.
%K A085219 nonn,tabl,changed
%O A085219 0,4
%A A085219 _Antti Karttunen_, Jun 23 2003
