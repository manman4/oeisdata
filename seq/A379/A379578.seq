%I A379578 #49 Jan 06 2025 20:03:29
%S A379578 1,3,0,2,13,15,12,14,1,3,0,2,9,11,8,10,53,55,52,54,61,63,60,62,49,51,
%T A379578 48,50,57,59,56,58,5,7,4,6,13,15,12,14,1,3,0,2,9,11,8,10,37,39,36,38,
%U A379578 45,47,44,46,33,35,32,34,41,43,40,42,213,215,212,214,221
%N A379578 In the base-4 expansion of n map 0->1, 1->3, 2->0, 3->2.
%C A379578 Obviously a(n) != n. Also a(a(n)) is the binary complement of n.
%C A379578 This mapping correspond in binary to 00->01, 01->11, 10->00, 11->10, after prefixing an initial 0 if the bit length is odd.
%H A379578 Paolo Xausa, <a href="/A379578/b379578.txt">Table of n, a(n) for n = 0..16383</a>
%H A379578 bitmath.blogspot.com, <a href="https://bitmath.blogspot.com/2019/10/square-root-of-bitwise-not.html?m=1">Square root of bitwise not</a>
%F A379578 a(n) = a(n-1) + 2 for n odd.
%F A379578 a(A020988(n)) = 0.
%F A379578 a(n) = (-7(-2)^k + 15(2^k)-8)/12 for n=2^k-1.
%e A379578 a(141) = 27 since 141 = 10001101_2 -> 00011011_2 = 27.
%t A379578 A379578[n_] := FromDigits[StringReplace[IntegerString[n, 4], {"0"->"1", "1"->"3", "2"->"0", "3"->"2"}], 4];
%t A379578 Array[A379578, 100, 0] (* _Paolo Xausa_, Jan 06 2025 *)
%o A379578 (Python)
%o A379578 def tobase4(n):
%o A379578     if n == 0: return [0]
%o A379578     d = []
%o A379578     while n > 0:
%o A379578         d.append(n & 3)
%o A379578         n >>= 2
%o A379578     return d[::-1]
%o A379578 def a(n):
%o A379578     if n & 1: return a(n-1) + 2
%o A379578     B4 = ["1","3","0","2"]
%o A379578     return int("".join(B4[b] for b in tobase4(n)), 4)
%o A379578 print([a(n) for n in range(0, 69)])
%Y A379578 Cf. A000225, A035327, A020988.
%K A379578 nonn,base,easy,look
%O A379578 0,2
%A A379578 _Dar√≠o Clavijo_, Dec 26 2024
