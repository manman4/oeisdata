%I A379740 #29 Jan 11 2025 08:54:12
%S A379740 1,1,1,1,1,1,4,4,4,7,7,10,10,10,10,16,22,19,19,25,25,25,31,31,22,34,
%T A379740 34,34,34,25,43,40,40,55,37,43,55,61,61,64,67,79,79,64,70,76,82,91,
%U A379740 106,106,97,106,112,97,103,106,97,91,94,109,130,133,127,121,118
%N A379740 Number of calls to Karatsuba's multiplication algorithm K(x,y) when recursively calculating K(Fibonacci(n),Fibonacci(n+1)) in decimal digits.
%C A379740 When x and y are both 2 or more digits and the larger is L digits long, base b = 10^floor(L/2) is chosen as a split point for those digits with x = xhi*b + xlo and y = yhi*b + ylo.
%C A379740 K(x,y) then makes 3 recursive calls to K(xhi,yhi), K(xlo,ylo) and K(xhi+xlo,yhi+ylo) (and those results can be assembled to make product x*y).
%C A379740 The initial K call and all further recursive calls are counted in a(n).
%C A379740 1 initial call and then 3 recursive calls each time means a(n) == 1 (mod 3).
%H A379740 Wikipedia, <a href="https://en.wikipedia.org/wiki/Karatsuba_algorithm">Karatsuba algorithm</a>
%o A379740 (Python)
%o A379740 counter = 0
%o A379740 def K(x: int, y: int) -> int:
%o A379740     global counter; counter += 1
%o A379740     if x < 10 or y < 10: return x * y
%o A379740     digits = max(len(str(x)), len(str(y))) // 2
%o A379740     base = 10 ** digits
%o A379740     a, b = divmod(x, base)
%o A379740     c, d = divmod(y, base)
%o A379740     x = K(b, d)
%o A379740     y = K(a + b, c + d)
%o A379740     z = K(a, c)
%o A379740     return z * 10**(digits * 2) + (y - z - x) * base + x
%o A379740 def a(n: int) -> int:
%o A379740     from sympy import fibonacci
%o A379740     global counter; counter = 0
%o A379740     K(fibonacci(n), fibonacci(n + 1))
%o A379740     return counter
%o A379740 print([a(n) for n in range(1, 66)])
%Y A379740 Cf. A000045, A055642.
%K A379740 nonn
%O A379740 1,7
%A A379740 _Dar√≠o Clavijo_, Jan 09 2025
