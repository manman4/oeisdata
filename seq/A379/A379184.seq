%I A379184 #21 Dec 23 2024 13:25:40
%S A379184 0,1,1,0,1,0,0,1,0,0,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,0,1,0,1,0,0,1,
%T A379184 0,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,0,
%U A379184 0,0,0,1,0,1,1,0,1,1,0,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,1
%N A379184 a(n) = A379183(n) mod 2.
%C A379184 For the interesting properties of this sequence and A379183, see the article "Finding missing gems amidst chaos".
%C A379184 Using Go language code found under Links, a search up to 10^9 terms counts irreducible missing binary words of length L = 1..20 as follows: [0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]. Can anyone prove the 256 missing words at L=10 are never found in unbounded searching?
%C A379184 A missing word is said to be irreducible if none of its subwords are missing.
%H A379184 Brad Klee, <a href="https://community.wolfram.com/groups/-/m/t/3289552">Finding missing gems amidst chaos</a>, Wolfram Community, 2024.
%H A379184 Bradley Klee, <a href="/A379184/a379184_1.go.txt">Conjecture Certificate (golang)</a>
%H A379184 Stephen Wolfram, <a href="https://writings.stephenwolfram.com/2024/09/nestedly-recursive-functions/">Nestedly Recursive Functions</a>, 2024.
%p A379184 b:= proc(n) option remember; `if`(n<4, signum(n-1), n-b(b(n-2))) end:
%p A379184 a:= n-> irem(b(n), 2):
%p A379184 seq(a(n), n=1..105);  # _Alois P. Heinz_, Dec 21 2024
%t A379184 Block[{a},a[1]=0;a[2]=a[3]=1;a[n_]:=a[n]=n-a[a[n-2]];Mod[a/@Range[50],2]]
%o A379184 (PARI)
%o A379184 a(n)={my(b);b=vector(n);for(n=1, n, b[n]=if(
%o A379184 n==1, 0, n==2, 1, n==3, 1, n-b[b[n-2]]));b[n]%2}
%o A379184 (Go)
%o A379184 func a(n int) int {
%o A379184     b := make([]int, n+1);
%o A379184     copy(b, []int{0, 0, 1, 1});
%o A379184     for i:=4; i < n+1; i++ {
%o A379184         b[i] = i-b[b[i-2]];
%o A379184     };
%o A379184     return b[n]%2
%o A379184 }
%Y A379184 Cf. A379183, A171587, A379274, A379275.
%K A379184 nonn
%O A379184 1
%A A379184 _Bradley Klee_, Dec 17 2024
