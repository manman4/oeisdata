%I A379274 #15 Dec 23 2024 13:23:31
%S A379274 1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,0,1,1,0,1,0,
%T A379274 0,0,1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,
%U A379274 1,1,0,1,0,0,0,1,0,0,1,0
%N A379274 a(n) = A135414(n) mod 2.
%C A379274 Using Go language code found under Links, a search up to 10^9 terms counts irreducible missing words of length L = 1..20 as follows: [0, 0, 0, 4, 2, 6, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0].
%C A379274 A missing word is said to be irreducible if none of its subwords are missing.
%C A379274 Relative to A379184, fewer omissions appear earlier and at more than one length.
%H A379274 Brad Klee, <a href="https://community.wolfram.com/groups/-/m/t/3289552">Finding missing gems amidst chaos</a>, Wolfram Community, 2024.
%H A379274 Bradley Klee, <a href="/A379274/a379274.go.txt">Conjecture certificate (golang)</a>
%H A379274 Stephen Wolfram, <a href="https://writings.stephenwolfram.com/2024/09/nestedly-recursive-functions/">Nestedly Recursive Functions</a>, 2024.
%t A379274 Block[{a}, a[1]= a[2]=1; a[n_]:=a[n]=n-a[a[n-2]]; Mod[a/@Range[50],2]]
%o A379274 (PARI)
%o A379274 a(n) = my(g = quadgen(5)); (n\g + (n + 1)\g - (n + 3)\g)%2;
%o A379274 alist(len) = my(b=vector(len)); for(n=1,len, b[n]=if(n==1,1, n==2,1, n-b[b[n-2]])); b%2;
%o A379274 (Go)
%o A379274 func b(n int) []int {
%o A379274     a := make([]int, n+1);
%o A379274     copy(a, []int{0, 1, 1});
%o A379274     for i:=3; i < n+1; i++ {
%o A379274         a[i] = i-a[a[i-2]];
%o A379274     };
%o A379274     for i:=0; i < n+1; i++ {
%o A379274         a[i] = a[i]%2;
%o A379274     };
%o A379274     return a[1:]
%o A379274 }
%Y A379274 Cf. A135414, A171587, A379184, A379275.
%K A379274 nonn,easy
%O A379274 1
%A A379274 _Bradley Klee_, Dec 19 2024
