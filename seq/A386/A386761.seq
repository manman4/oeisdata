%I A386761 #49 Oct 22 2025 11:23:11
%S A386761 13,10,30,330,6006,30030,1111110,200222022,1001110110,955559599995,
%T A386761 1000110001000110,11011101101110110,11111100000101111010,
%U A386761 200220200202022022022
%N A386761 a(n) is the least number with exactly two distinct base-10 digits and exactly n distinct prime factors, or -1 if there is no such number.
%C A386761 a(n) is the least term k of A031955, if it exists, such that A001221(k) = n.
%e A386761 a(4) = 330 because 330 has two distinct digits 3 and 0, and four distinct prime factors 2, 3, 5 and 11, and no smaller number works.
%p A386761 G:= proc(d)
%p A386761   local S, a, b, s, q, r, i;
%p A386761   S:= {}:
%p A386761   for s in combinat:-powerset({$0..d-1}) minus {{}, {$0..d-1}} do
%p A386761     q:= add(10^i, i=s);
%p A386761     r:= (10^d-1)/9 - q;
%p A386761     S:= S union {seq(seq(a*q+b*r, b = a+1..9), a = `if`(q < 10^(d-1), 0, 1) .. 8)};
%p A386761  od;
%p A386761 S:= sort(convert(S, list));
%p A386761 end proc:
%p A386761 M:= 12: # for a(1) .. a(M)
%p A386761 V:= Vector(M): count:= 0:
%p A386761 for d from 2 while count < M do
%p A386761 for x in G(d) while count < M do
%p A386761     v:=NumberTheory:-NumberOfPrimeFactors(x,distinct);
%p A386761     if v <= M and V[v] = 0 then
%p A386761        count:= count+1; V[v]:= x;
%p A386761     fi
%p A386761   od
%p A386761 od:
%p A386761 convert(V,list);
%o A386761 (Python)
%o A386761 from sympy import factorint
%o A386761 from itertools import count, product, islice
%o A386761 def bgen(): # generator of A031955
%o A386761     for d in count(2):
%o A386761         yield from sorted(int("".join(t)) for f in "123456789" for r in "0123456789" if f!=r for s in product(f+r, repeat=d-1) if len(set(t:=(f, )+s)) == 2)
%o A386761 def agen(): # generator of terms
%o A386761     n, adict = 1, dict()
%o A386761     for t in bgen():
%o A386761         v = len(factorint(t))
%o A386761         if v not in adict:
%o A386761             adict[v] = t
%o A386761             while n in adict: yield adict[n]; n += 1
%o A386761 print(list(islice(agen(), 9))) # _Michael S. Branicky_, Oct 11 2025
%Y A386761 Cf. A001221, A031955.
%K A386761 nonn,base,more,changed
%O A386761 1,1
%A A386761 _Robert Israel_, Oct 06 2025
%E A386761 a(13) from _Michael S. Branicky_, Oct 11 2025
%E A386761 a(14) from _Daniel Suteu_, Oct 22 2025
