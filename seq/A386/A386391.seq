%I A386391 #33 Oct 02 2025 13:15:59
%S A386391 1,4,24,44,84,144,336,432,720,840,1764,1440,1344,2688,4464,4488,4032,
%T A386391 9744,8064,6720,10080,9240,17136,18720,17472,13440,24480,20160,28224,
%U A386391 29568,34440,34944,48048,47040,44352,40320,92736,55440,60480,68544,88704,73920,103488,114240,110880,104832,131040
%N A386391 a(n) is the first number with a total of exactly n 4's in the decimal digits of its divisors.
%H A386391 Robert Israel, <a href="/A386391/b386391.txt">Table of n, a(n) for n = 0..441</a>
%e A386391 a(5) = 144 because of the divisors of 144, 144 has two 4's, while 4, 24 and 48 have one each, for a total of 5, and no smaller number works.
%p A386391 ff:= proc(n) option remember; numboccur(4, convert(n, base, 10)) end proc:
%p A386391 f:= proc(n) local d; add(ff(d), d=numtheory:-divisors(n)) end proc:
%p A386391 V:= Array(0..80): count:= 0:
%p A386391 for x from 1 while count < 81 do
%p A386391   v:= f(x); if v <= 80 and V[v] = 0 then V[v]:= x; count:= count+1; fi;
%p A386391 od:
%p A386391 convert(V, list);
%t A386391 a[n_] := Block[{t=1}, While[ Count[ Flatten@ IntegerDigits@ Divisors@ t, 4] != n, t++]; t]; a /@ Range[0, 30] (* _Giovanni Resta_, Oct 02 2025 *)
%o A386391 (Python)
%o A386391 from sympy import divisors
%o A386391 from itertools import count, islice
%o A386391 def f(n): return sum(str(d).count("4") for d in divisors(n, generator=True))
%o A386391 def agen(): # generator of terms
%o A386391     n, adict = 0, dict()
%o A386391     for k in count(1):
%o A386391         v = f(k)
%o A386391         if v not in adict:
%o A386391             adict[v] = k
%o A386391             while n in adict: yield adict[n]; n += 1
%o A386391 print(list(islice(agen(), 50))) # _Michael S. Branicky_, Oct 01 2025
%o A386391 (PARI) a(n) = my(k=1); while (sumdiv(k, d, #select(x->(x==4), digits(d))) != n, k++); k; \\ _Michel Marcus_, Oct 02 2025
%Y A386391 Cf. A387357, A387396, A387464.
%K A386391 nonn,base,new
%O A386391 0,2
%A A386391 _Robert Israel_, Sep 28 2025
