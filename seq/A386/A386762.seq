%I A386762 #14 Aug 12 2025 03:47:04
%S A386762 144,324,400,576,784,1600,1728,1936,2025,2304,2500,2704,2916,3136,
%T A386762 3600,3969,4624,5625,5776,5832,6400,7056,7744,8000,8100,8464,9216,
%U A386762 9604,9801,10816,12544,13456,13689,13824,14400,15376,15876,17424,18225,18496,19600,20736,21609
%N A386762 Perfect powers of nonsquarefree numbers k that are not squareful.
%C A386762 A131605 is the union of this sequence, A303606, and A383394, where the three sequences do not intersect one another.
%C A386762 A001597 is the union of A131605 and A246547.
%C A386762 Superset of A368508 (i.e., perfect powers of superprimorials that are not powers of 2).
%H A386762 Michael De Vlieger, <a href="/A386762/b386762.txt">Table of n, a(n) for n = 1..10000</a>
%e A386762 Table of n, a(n) for n = 1..12:
%e A386762  n    a(n)
%e A386762 -----------------------------
%e A386762  1    144 = 12^2 = 2^4 *  3^2
%e A386762  2    324 = 18^2 = 2^2 *  3^4
%e A386762  3    400 = 20^2 = 2^4 *  5^2
%e A386762  4    576 = 24^2 = 2^6 *  3^2
%e A386762  5    784 = 28^2 = 2^4 *  7^2
%e A386762  6   1600 = 40^2 = 2^6 *  5^2
%e A386762  7   1728 = 12^3 = 2^6 *  3^3
%e A386762  8   1936 = 44^2 = 2^4 * 11^2
%e A386762  9   2025 = 45^2 = 3^4 *  5^2
%e A386762 10   2304 = 48^2 = 2^8 *  3^2
%e A386762 11   2500 = 50^2 = 2^2 *  5^4
%e A386762 12   2704 = 52^2 = 2^4 * 13^2
%t A386762 nn = 2^15; i = 1; k = 2; MapIndexed[Set[S[First[#2]], #1] &, Select[Range@ Sqrt[nn], 1 == Min[#] < Max[#] &@ FactorInteger[#][[All, -1]] &] ]; Union@ Reap[While[j = 2; While[S[i]^j < nn, Sow[S[i]^j]; j++]; j > 2, k++; i++] ][[-1, 1]]
%o A386762 (Python)
%o A386762 from math import isqrt
%o A386762 from sympy import mobius, integer_nthroot
%o A386762 def A386762(n):
%o A386762     def squarefreepi(n): return int(sum(mobius(k)*(n//k**2) for k in range(1, isqrt(n)+1)))
%o A386762     def bisection(f,kmin=0,kmax=1):
%o A386762         while f(kmax) > kmax: kmax <<= 1
%o A386762         while f(kmin) < kmin: kmin >>= 1		
%o A386762         kmin = max(kmin,kmax >> 1)
%o A386762         while kmax-kmin > 1:
%o A386762             kmid = kmax+kmin>>1
%o A386762             if f(kmid) <= kmid:
%o A386762                 kmax = kmid
%o A386762             else:
%o A386762                 kmin = kmid
%o A386762         return kmax
%o A386762     def g(x):
%o A386762         c, l, j = 1+x-squarefreepi(integer_nthroot(x,3)[0])-squarefreepi(x), 0, isqrt(x)
%o A386762         while j>1:
%o A386762             k2 = integer_nthroot(x//j**2,3)[0]+1
%o A386762             w = squarefreepi(k2-1)
%o A386762             c += j*(l-w)
%o A386762             l, j = w, isqrt(x//k2**3)
%o A386762         return c+l
%o A386762     def f(x): return n+x-sum(g(integer_nthroot(x, k)[0]) for k in range(2, x.bit_length()))
%o A386762     return bisection(f,n,n) # _Chai Wah Wu_, Aug 11 2025
%Y A386762 Cf. A001597, A126706, A131605, A246547, A286708, A303606, A368508, A383394.
%K A386762 nonn,easy
%O A386762 1,1
%A A386762 _Michael De Vlieger_, Aug 02 2025
