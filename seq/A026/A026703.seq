%I A026703 #16 Sep 22 2025 16:00:28
%S A026703 1,1,1,1,3,1,1,5,5,1,1,6,13,6,1,1,7,24,24,7,1,1,8,31,61,31,8,1,1,9,39,
%T A026703 116,116,39,9,1,1,10,48,155,293,155,48,10,1,1,11,58,203,564,564,203,
%U A026703 58,11,1,1,12,69,261,767,1421,767,261,69,12,1
%N A026703 Triangular array T read by rows: T(n,1) = T(n,n) = 1, T(n,k) = T(n-1, k-1) + T(n-2,k-1) + T(n-1,k) if k=(n/2) or k=((n+1)/2), otherwise T(n,k) = T(n-1,k-1) + T(n-1,k).
%H A026703 G. C. Greubel, <a href="/A026703/b026703.txt">Rows n = 1..100 of triangle, flattened</a>
%F A026703 T(n, k) = number of paths from (0, 0) to (n-k, k) in the directed graph having vertices (i, j) and edges (i, j)-to-(i+1, j) and (i, j)-to-(i, j+1) for i, j >= 0 and edges (i, j)-to-(i+1, j+1) if |i-j|<=1.
%e A026703 Triangle begins:
%e A026703   1,
%e A026703   1, 1,
%e A026703   1, 3, 1,
%e A026703   1, 5, 5, 1,
%e A026703   1, 6, 13, 6, 1,
%e A026703   1, 7, 24, 24, 7, 1,
%e A026703   1, 8, 31, 61, 31, 8, 1,
%e A026703   1, 9, 39, 116, 116, 39, 9, 1,
%e A026703   ...
%p A026703 A026703 := proc(n,k)
%p A026703     option remember;
%p A026703     if k <0 or k >n then
%p A026703         -0 ;
%p A026703     elif n =k or k =1 then
%p A026703         1 ;
%p A026703     elif k >= n/2 and k <= n/2+1 then
%p A026703         procname(n-1,k-1)+procname(n-2,k-1)+procname(n-1,k) ;
%p A026703     else
%p A026703         procname(n-1,k-1)+procname(n-1,k) ;
%p A026703     end if;
%p A026703 end proc:
%p A026703 seq(seq(A026703(n,k),k=1..n),n=1..12) ; # _R. J. Mathar_, Jun 11 2025
%t A026703 T[n_, k_]:= T[n, k]= If[k==1 || k==n, 1, If[k==n/2 || k==(n+1)/2  || k== (n+2)/2, T[n-1, k-1] +T[n-2, k-1] +T[n-1, k], T[n-1, k-1] +T[n-1, k]]];
%t A026703 Table[T[n, k], {n, 12}, {k, n}]//Flatten (* _G. C. Greubel_, Jul 17 2019 *)
%o A026703 (PARI) T(n,k) = if(k==1 || k==n, 1, if(k==n/2 || k==(n+1)/2 || k==(n+2)/2 , T(n-1, k-1) + T(n-2, k-1) + T(n-1, k), T(n-1, k-1) + T(n-1, k) ));
%o A026703 for(n=1,12, for(k=1,n, print1(T(n,k), ", "))) \\ _G. C. Greubel_, Jul 17 2019
%o A026703 (SageMath)
%o A026703 def T(n, k):
%o A026703     if (k==1 or k==n): return 1
%o A026703     elif (k==n/2 or k==(n+1)/2 or k==(n+2)/2): return T(n-1, k-1) + T(n-2, k-1) + T(n-1, k)
%o A026703     else: return T(n-1, k-1) + T(n-1, k)
%o A026703 [[T(n, k) for k in (1..n)] for n in (1..12)] # _G. C. Greubel_, Jul 17 2019
%o A026703 (GAP)
%o A026703 T:= function(n,k)
%o A026703     if (k=1 or k=n) then return 1;
%o A026703     elif (k=Int(n/2) and k=Int((n+1)/2) or k=Int((n+2)/2)) then return T(n-1, k-1) + T(n-2, k-1) + T(n-1, k);
%o A026703     else return T(n-1, k-1) + T(n-1, k);
%o A026703     fi;
%o A026703   end;
%o A026703 Flat(List([1..12], n-> List([1..n], k-> T(n,k) ))); # _G. C. Greubel_, Jul 17 2019
%Y A026703 Cf. A026710 (row sums).
%K A026703 nonn,tabl
%O A026703 1,5
%A A026703 _Clark Kimberling_
